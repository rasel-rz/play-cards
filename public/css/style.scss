* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
body {
  font-family: monospace;
}

h1,
h2 {
  text-align: center;
}

#cards {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: clamp(8px, 1vw, 1vw);
  margin-top: 2rem;
  min-height: clamp(var(--card-height, 80px), 10vw, 143vw);

  .card {
    &.playing {
      z-index: 1;
      animation: spincard 1s linear infinite;
    }
    &:not(.playing):hover {
      transform: scale(1.15);
      opacity: 1;
      z-index: 1;
      @media screen and (max-width: 768px) {
        transform: scale(1.5);
      }
    }
  }
}

.card {
  overflow: hidden;
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  padding: max(1rem, 1.5vw);
  height: max-content;
  cursor: pointer;
  border: 1px solid var(--card-color);
  color: var(--card-color);
  opacity: 0.8;
  background-color: #fff;
  border-radius: 8px;
  transform: scale(1) rotate(0deg);
  transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out;

  [value] {
    font-size: clamp(32px, 4vw, 4vw);
    line-height: 1;
    display: flex;
    span:not(:only-child) {
      font-size: clamp(20px, 2.5vw, 2.5vw);
      line-height: 1.6;
      transform: scaleY(1.6);
    }
  }
  [suit] {
    font-size: clamp(24px, 3vw, 3vw);
  }
}

#playground {
  height: clamp(248px, 30vw, 30vw);
  width: clamp(168px, 21vw, 21vw);
  background-color: #ffffff;
  border: 1px solid;
  border-color: #ffffff;
  border-radius: 16px;
  margin: 4vw auto;
  position: relative;
  padding: max(1rem, 2vw);
  position: relative;
  --size: clamp(72px, 9vw, 9vw);
  pointer-events: none;
  cursor: default;

  &.pulse {
    pointer-events: all;
    cursor: pointer;
    .card-holder .card {
      animation: pulse 1s ease-in-out infinite;
    }
  }

  &::after {
    content: "";
    border: 16px solid #f6f6f6;
    border-top: 16px solid #d9d9d9;
    border-radius: 50%;
    width: var(--size);
    height: var(--size);
    animation: spin 2s linear infinite;
    display: inline-block;
    position: absolute;
    top: calc(50% - (var(--size) / 2));
    left: calc(50% - (var(--size) / 2));
  }

  &.appear {
    background-color: #dfdfdf;
    border-color: #000000;
    &::after {
      opacity: 0;
      z-index: -1;
    }

    .card-holder::after {
      display: block;
    }
  }

  .card-holder {
    min-height: clamp(88px, 10vw, 10vw);
    min-width: clamp(50px, 6vw, 6vw);
    position: absolute;
    // background: var(--player);
    display: flex;
    justify-content: center;

    &:not(:first-child) .card {
      opacity: 0;
      transition: opacity 0.5s ease-in-out;
      &.fade-in {
        opacity: 1;
      }
    }

    .card {
      &:not(:last-child) {
        display: none;
      }
    }

    &::after {
      position: absolute;
      font-size: 4vw;
      display: none;
      white-space: nowrap;
    }

    &:nth-child(1) {
      top: max(1rem, 4vw);
      left: 50%;
      transform: translateX(-50%);
      z-index: 4;
    }

    &:nth-child(2) {
      right: max(1rem, 4vw);
      top: 50%;
      transform: translateY(-50%);
      z-index: 3;
      &::after {
        content: "\2190 "" " attr(data-player);
        left: calc(100% + 5vw);
        top: 50%;
        transform: translateY(-50%);
      }
    }

    &:nth-child(3) {
      bottom: max(1rem, 4vw);
      left: 50%;
      transform: translateX(-50%);
      z-index: 2;
      &::after {
        content: "\2191 "" " attr(data-player);
        bottom: -10vw;
        left: 50%;
        transform: translateX(-50%);
      }
    }

    &:nth-child(4) {
      left: max(1rem, 4vw);
      top: 50%;
      transform: translateY(-50%);
      z-index: 1;
      &::after {
        content: attr(data-player) " " "\2192";
        right: calc(100% + 5vw);
        top: 50%;
        transform: translateY(-50%);
      }
    }
  }
}

#message {
  font-size: 2.5vw;
  text-align: center;
  transform: scaleY(1.25);
  line-height: 1.5;
  margin-top: 10vw;
}

@keyframes spincard {
  0% {
    transform: translateX(0) translateY(0) rotate(0deg);
  }
  100% {
    transform: translateX(var(--playing-x)) translateY(var(--playing-y))
      rotate(360deg);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}
